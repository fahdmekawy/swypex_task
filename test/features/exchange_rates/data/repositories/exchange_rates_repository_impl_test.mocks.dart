// Mocks generated by Mockito 5.4.5 from annotations
// in swypex_task/test/features/exchange_rates/data/repositories/exchange_rates_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:swypex_task/features/exchange_rates/data/datasources/exchange_rates_remote_data_source.dart'
    as _i3;
import 'package:swypex_task/features/exchange_rates/data/models/exchange_rates_model.dart'
    as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeExchangeRatesModel_0 extends _i1.SmartFake
    implements _i2.ExchangeRatesModel {
  _FakeExchangeRatesModel_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [ExchangeRatesRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockExchangeRatesRemoteDataSource extends _i1.Mock
    implements _i3.ExchangeRatesRemoteDataSource {
  MockExchangeRatesRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.ExchangeRatesModel> getExchangeRates({
    required String? startDate,
    required String? endDate,
    required String? source,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getExchangeRates, [], {
              #startDate: startDate,
              #endDate: endDate,
              #source: source,
            }),
            returnValue: _i4.Future<_i2.ExchangeRatesModel>.value(
              _FakeExchangeRatesModel_0(
                this,
                Invocation.method(#getExchangeRates, [], {
                  #startDate: startDate,
                  #endDate: endDate,
                  #source: source,
                }),
              ),
            ),
          )
          as _i4.Future<_i2.ExchangeRatesModel>);
}
